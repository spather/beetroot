# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/beetroot',
                'doc_host': 'https://spather.github.io',
                'git_url': 'https://github.com/spather/beetroot',
                'lib_path': 'beetroot'},
  'syms': { 'beetroot.api': { 'beetroot.api.OutputHandler': ('api.html#outputhandler', 'beetroot/api.py'),
                              'beetroot.api.OutputHandler.handle_output': ('api.html#outputhandler.handle_output', 'beetroot/api.py'),
                              'beetroot.api.SourceHandler': ('api.html#sourcehandler', 'beetroot/api.py'),
                              'beetroot.api.SourceHandler.handle_markdown': ('api.html#sourcehandler.handle_markdown', 'beetroot/api.py'),
                              'beetroot.api.SourceHandler.handle_python_source': ( 'api.html#sourcehandler.handle_python_source',
                                                                                   'beetroot/api.py'),
                              'beetroot.api.handle_notebook': ('api.html#handle_notebook', 'beetroot/api.py')},
            'beetroot.backend_config': { 'beetroot.backend_config.BackendConfig': ( 'backend_config.html#backendconfig',
                                                                                    'beetroot/backend_config.py'),
                                         'beetroot.backend_config.BackendConfig.configure_arg_parser': ( 'backend_config.html#backendconfig.configure_arg_parser',
                                                                                                         'beetroot/backend_config.py'),
                                         'beetroot.backend_config.BackendConfig.run': ( 'backend_config.html#backendconfig.run',
                                                                                        'beetroot/backend_config.py')},
            'beetroot.cli': {'beetroot.cli.br_export': ('cli.html#br_export', 'beetroot/cli.py')},
            'beetroot.markdown.api': { 'beetroot.markdown.api.export_markdown_notebook': ( 'markdown/markdown_api.html#export_markdown_notebook',
                                                                                           'beetroot/markdown/api.py')},
            'beetroot.markdown.cli': { 'beetroot.markdown.cli.MarkdownBackendConfig': ( 'markdown/markdown_cli.html#markdownbackendconfig',
                                                                                        'beetroot/markdown/cli.py'),
                                       'beetroot.markdown.cli.MarkdownBackendConfig.configure_arg_parser': ( 'markdown/markdown_cli.html#markdownbackendconfig.configure_arg_parser',
                                                                                                             'beetroot/markdown/cli.py'),
                                       'beetroot.markdown.cli.MarkdownBackendConfig.run': ( 'markdown/markdown_cli.html#markdownbackendconfig.run',
                                                                                            'beetroot/markdown/cli.py')},
            'beetroot.markdown.outputs': { 'beetroot.markdown.outputs.MarkdownOutputHandler': ( 'markdown/outputs.html#markdownoutputhandler',
                                                                                                'beetroot/markdown/outputs.py'),
                                           'beetroot.markdown.outputs.MarkdownOutputHandler.__init__': ( 'markdown/outputs.html#markdownoutputhandler.__init__',
                                                                                                         'beetroot/markdown/outputs.py'),
                                           'beetroot.markdown.outputs.MarkdownOutputHandler.handle_output': ( 'markdown/outputs.html#markdownoutputhandler.handle_output',
                                                                                                              'beetroot/markdown/outputs.py'),
                                           'beetroot.markdown.outputs.emit_image_data': ( 'markdown/outputs.html#emit_image_data',
                                                                                          'beetroot/markdown/outputs.py'),
                                           'beetroot.markdown.outputs.emit_lines': ( 'markdown/outputs.html#emit_lines',
                                                                                     'beetroot/markdown/outputs.py'),
                                           'beetroot.markdown.outputs.emit_output_data': ( 'markdown/outputs.html#emit_output_data',
                                                                                           'beetroot/markdown/outputs.py'),
                                           'beetroot.markdown.outputs.emit_plaintext': ( 'markdown/outputs.html#emit_plaintext',
                                                                                         'beetroot/markdown/outputs.py'),
                                           'beetroot.markdown.outputs.filename_from_image_bytes': ( 'markdown/outputs.html#filename_from_image_bytes',
                                                                                                    'beetroot/markdown/outputs.py')},
            'beetroot.markdown.source': { 'beetroot.markdown.source.MarkdownSourceHandler': ( 'markdown/source.html#markdownsourcehandler',
                                                                                              'beetroot/markdown/source.py'),
                                          'beetroot.markdown.source.MarkdownSourceHandler.__init__': ( 'markdown/source.html#markdownsourcehandler.__init__',
                                                                                                       'beetroot/markdown/source.py'),
                                          'beetroot.markdown.source.MarkdownSourceHandler.handle_markdown': ( 'markdown/source.html#markdownsourcehandler.handle_markdown',
                                                                                                              'beetroot/markdown/source.py'),
                                          'beetroot.markdown.source.MarkdownSourceHandler.handle_python_source': ( 'markdown/source.html#markdownsourcehandler.handle_python_source',
                                                                                                                   'beetroot/markdown/source.py'),
                                          'beetroot.markdown.source.emit_markdown_source': ( 'markdown/source.html#emit_markdown_source',
                                                                                             'beetroot/markdown/source.py'),
                                          'beetroot.markdown.source.handle_python_source': ( 'markdown/source.html#handle_python_source',
                                                                                             'beetroot/markdown/source.py'),
                                          'beetroot.markdown.source.is_directive_line': ( 'markdown/source.html#is_directive_line',
                                                                                          'beetroot/markdown/source.py'),
                                          'beetroot.markdown.source.parse_and_extract_directives_from_python_source': ( 'markdown/source.html#parse_and_extract_directives_from_python_source',
                                                                                                                        'beetroot/markdown/source.py'),
                                          'beetroot.markdown.source.parse_directive_line': ( 'markdown/source.html#parse_directive_line',
                                                                                             'beetroot/markdown/source.py')},
            'beetroot.markdown.transformations': { 'beetroot.markdown.transformations.CodeFoldTransformer': ( 'markdown/transformations.html#codefoldtransformer',
                                                                                                              'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.CodeFoldTransformer.emit_after': ( 'markdown/transformations.html#codefoldtransformer.emit_after',
                                                                                                                         'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.CodeFoldTransformer.emit_before': ( 'markdown/transformations.html#codefoldtransformer.emit_before',
                                                                                                                          'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.EscapeEndLineSlashesWithinLatexMath': ( 'markdown/transformations.html#escapeendlineslasheswithinlatexmath',
                                                                                                                              'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.EscapeEndLineSlashesWithinLatexMath.process_lines': ( 'markdown/transformations.html#escapeendlineslasheswithinlatexmath.process_lines',
                                                                                                                                            'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.EscapeEqualsSignsAtLineStartWithinLatexMath': ( 'markdown/transformations.html#escapeequalssignsatlinestartwithinlatexmath',
                                                                                                                                      'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.EscapeEqualsSignsAtLineStartWithinLatexMath.process_lines': ( 'markdown/transformations.html#escapeequalssignsatlinestartwithinlatexmath.process_lines',
                                                                                                                                                    'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.EscapeUnderscoresWithinLatexMath': ( 'markdown/transformations.html#escapeunderscoreswithinlatexmath',
                                                                                                                           'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.EscapeUnderscoresWithinLatexMath.process_lines': ( 'markdown/transformations.html#escapeunderscoreswithinlatexmath.process_lines',
                                                                                                                                         'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.MultiTransformer': ( 'markdown/transformations.html#multitransformer',
                                                                                                           'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.MultiTransformer.__init__': ( 'markdown/transformations.html#multitransformer.__init__',
                                                                                                                    'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.MultiTransformer.emit_after': ( 'markdown/transformations.html#multitransformer.emit_after',
                                                                                                                      'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.MultiTransformer.emit_before': ( 'markdown/transformations.html#multitransformer.emit_before',
                                                                                                                       'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.MultiTransformer.process_lines': ( 'markdown/transformations.html#multitransformer.process_lines',
                                                                                                                         'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.ReplaceSingleDollarDelimiters': ( 'markdown/transformations.html#replacesingledollardelimiters',
                                                                                                                        'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.ReplaceSingleDollarDelimiters.process_lines': ( 'markdown/transformations.html#replacesingledollardelimiters.process_lines',
                                                                                                                                      'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.Transformer': ( 'markdown/transformations.html#transformer',
                                                                                                      'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.Transformer.emit_after': ( 'markdown/transformations.html#transformer.emit_after',
                                                                                                                 'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.Transformer.emit_before': ( 'markdown/transformations.html#transformer.emit_before',
                                                                                                                  'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.Transformer.process_lines': ( 'markdown/transformations.html#transformer.process_lines',
                                                                                                                    'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.TransformerWithDirectives': ( 'markdown/transformations.html#transformerwithdirectives',
                                                                                                                    'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.TransformerWithDirectives.__init__': ( 'markdown/transformations.html#transformerwithdirectives.__init__',
                                                                                                                             'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.TransformerWithDirectives.begin_using_directives': ( 'markdown/transformations.html#transformerwithdirectives.begin_using_directives',
                                                                                                                                           'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.Unindent': ( 'markdown/transformations.html#unindent',
                                                                                                   'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.Unindent.process_lines': ( 'markdown/transformations.html#unindent.process_lines',
                                                                                                                 'beetroot/markdown/transformations.py'),
                                                   'beetroot.markdown.transformations.emit_with_transformation': ( 'markdown/transformations.html#emit_with_transformation',
                                                                                                                   'beetroot/markdown/transformations.py')}}}
