# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_api.ipynb.

# %% auto 0
__all__ = ['export_notebook']

# %% ../nbs/03_api.ipynb 5
import io
from typing import Dict, List, Iterable, Sequence, Tuple

# %% ../nbs/03_api.ipynb 6
from .transformations import Transformer
from beetroot.markdown.source import (
    SourceHandler,
)
from beetroot.markdown.outputs import (
    Completion,
    no_op_completion,
    OutputHandler,
)

# %% ../nbs/03_api.ipynb 7
def export_notebook(
    nb_json: Dict, transformers_map: Dict[str, Transformer] = {}
) -> Tuple[str, Completion]:
    stream = io.StringIO()
    source_handler = SourceHandler(stream, transformers_map)
    output_handler = OutputHandler(stream, transformers_map)

    completion = no_op_completion
    for cell in nb_json["cells"]:
        if cell["cell_type"] == "markdown":
            source_handler.handle_markdown(cell["source"])
        elif cell["cell_type"] == "code":
            should_show_output = source_handler.handle_python_source(cell["source"])

            if not should_show_output:
                continue

            for output in cell["outputs"]:
                completion = output_handler.handle_output(output)

    stream.seek(0)
    return stream.read(), completion
